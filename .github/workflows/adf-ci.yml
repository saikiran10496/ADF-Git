name: ADF CI Pipeline

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PACKAGE_FOLDER: 'build'
      ADF_ROOT_FOLDER: ''
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 18.x
          
      - name: install ADF Utilities package
        run: npm install
        working-directory: ${{github.workspace}}/build
        
      - name: Validate
        run: |
          npm run build validate ${{ github.workspace }}/$ADF_ROOT_FOLDER \
            /subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.RESOURCE_GROUP }}/providers/Microsoft.DataFactory/factories/${{ secrets.DATA_FACTORY_NAME }} # (2) The validate command needs the root folder location of your repository where all the objects are stored. And the 2nd parameter is the resourceID of the ADF instance 
        working-directory: ${{github.workspace}}/build

      - name: Generate ARM Template
        run: |
          npm run build export ${{ github.workspace }}/$ADF_ROOT_FOLDER \
            /subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.RESOURCE_GROUP }}/providers/Microsoft.DataFactory/factories/${{ secrets.DATA_FACTORY_NAME }} "ArmTemplate"
        working-directory: ${{ github.workspace }}/build

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ArmTemplate # (4) use the same artifact name you used in the previous export step
          path: ${{github.workspace}}/build/ArmTemplate 
                      
      - name: Download a Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: ArmTemplate # (5) Artifact name 
        
        
      - name: Login via Az module
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
          #enable-AzPSSession: true 
        
      - name: data-factory-deploy
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: ${{ secrets.RESOURCE_GROUP }} # (6) your target ADF resource group name
          dataFactoryName: ${{ secrets.DATA_FACTORY_NAME }} # (7) your target ADF name
          armTemplateFile: ARMTemplateForFactory.json # (8) ARM template file name ARMTemplateForFactory.json
          armTemplateParametersFile: ARMTemplateParametersForFactory.json # (9) ARM template parameters file name ARMTemplateParametersForFactory.json
          # additionalParameters: # (10) Parameters which will be replaced in the ARM template. Expected format 'key1=value key2=value keyN=value'. At the minimum here you should provide the target ADF name parameter. Check the ARMTemplateParametersForFactory.json file for all the parameters that are expected in your scenario
                 
                  # skipAzModuleInstallation:  # Parameters which skip the Az module installation. Optional, default is false.
